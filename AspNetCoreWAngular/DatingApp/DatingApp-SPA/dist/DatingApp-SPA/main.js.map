{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes-gaurd.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/members-edit/members-edit.component.css","webpack:///./src/app/members/members-edit/members-edit.component.html","webpack:///./src/app/members/members-edit/members-edit.component.ts","webpack:///./src/app/members/photo-edit/photo-edit.component.css","webpack:///./src/app/members/photo-edit/photo-edit.component.html","webpack:///./src/app/members/photo-edit/photo-edit.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You shall not pass!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import {Injectable, Inject} from '@angular/core'\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MembersEditComponent } from '../members/members-edit/members-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MembersEditComponent> {\r\n    canDeactivate(component: MembersEditComponent) {\r\n        if (component.editform.dirty) {\r\n            return confirm('Are you sure..');\r\n        }\r\n        return true;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { UserService } from '../_services/user.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { UserService } from '../_services/user.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private router: Router,\r\n        private alertify: AlertifyService, private authService: AuthService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        console.log('name Id' + this.authService.decodedToken.nameid);\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving your data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { UserService } from '../_services/user.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers().pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = 'http://localhost:5000/api/auth/';\n  jwtHelper = new JwtHelperService;\n  decodedToken: any;\n  currentUser: User;\n  private photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'register', model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    // 401\r\n                    if(error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    // Handle Single Error\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        console.error('Interceptor error:' + applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    // Handle collection of errors\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        for (const key in serverError) {\r\n                            if (serverError.hasOwnProperty(key)) {\r\n                                modalStateErrors += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl + 'users');\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: string, id: string) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: string, id: string) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id, {});\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { MembersEditComponent } from './members/members-edit/members-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes-gaurd';\nimport { PhotoEditComponent } from './members/photo-edit/photo-edit.component';\n\n\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      ListsComponent,\n      MemberListComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MembersEditComponent,\n      PhotoEditComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      BsDropdownModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      NgxGalleryModule,\n      BsDatepickerModule.forRoot(),\n      JwtModule .forRoot(\n         {\n            config: {\n               tokenGetter: tokenGetter,\n               whitelistedDomains: ['localhost:5000'],\n               blacklistedRoutes: ['localhost:5000/api/auth']\n            }\n         }\n      ),\n      TabsModule.forRoot(),\n      FileUploadModule\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>  \\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\" ></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  values: any = {};\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true; //!this.registerMode;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  lists works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function:  ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function:  ease-out;\\r\\n}\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left:0;\\r\\n    right:0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n.card-img-wrapper:hover .member-icons{\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\">\\n        <i class=\\\"fa fa-user\\\"></i></button>\\n      </li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center-mb1\\\">{{user.knownAs}}, {{user.age}}</h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height : 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knowAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100 mr-2\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\">message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user.lookingFor}}(Ex culpa eiusmod quis Lorem fugiat. Incididunt duis ad enim sunt qui. Ullamco magna\\n              dolor in eiusmod sit. Ut ea ut commodo ipsum eu non sit eiusmod voluptate consequat aute eu. Nisi velit in\\n              sunt labore nulla sunt quis amet enim. Nulla sint mollit cupidatat aliqua ex adipisicing sint id tempor\\n              officia incididunt irure enim.)</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <p>Messages will go here</p>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n}\n\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>  \\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { UserService } from '../../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'];\n    })\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height : 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\" >\\n        <strong>Infromation:</strong> You have made changes...\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl}}\\\" alt=\\\"{{user.knowAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n            <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Description</h4>\\n              <textarea name=\\\"introduction\\\"  class=\\\"form-control\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <h4>Looking For</h4>\\n              <textarea name=\\\"lookingFor\\\"  class=\\\"form-control\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n              <h4>Interests</h4>\\n              <textarea name=\\\"interests\\\"  class=\\\"form-control\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                  <label for=\\\"city\\\" class='mr-2'>City</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control mr-3\\\" name='city' [(ngModel)]=\\\"user.city\\\">\\n                  <label for=\\\"country\\\" class='mr-2'>Country</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name='country' [(ngModel)]=\\\"user.country\\\">\\n                  </div>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-edit [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-edit>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-members-edit',\n  templateUrl: './members-edit.component.html',\n  styleUrls: ['./members-edit.component.css']\n})\nexport class MembersEditComponent implements OnInit {\n  @ViewChild('editForm') editform: NgForm;\n  user: User;\n  photoUrl: string;\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editform.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\n    private userService: UserService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n      console.log('userName' + this.user.knownAs);\n    });\n\n    this.authService.currentPhotoUrl.subscribe(pUrl => this.photoUrl = pUrl);\n  }\n\n  updateUser() {\n    console.log('update user');\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.alertify.success('Profile updated');\n      this.editform.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"img.image-thumbnail {\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n    border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n    color: transparent;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"\\\" class=\\\"img-thumbnail p-1\\\">\\n    <div class=\\\"text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" (click)='setMainPhoto(photo)' \\n            [disabled]='photo.isMain'\\n            [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\">Main</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" [disabled]=\\\"photo.isMain\\\" >\\n          <i class=\\\"fa fa-trash-o\\\" (click)=\\\"deletePhoto(photo.id)\\\"></i>\\n        </button>\\n      </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n    <div class=\\\"col-md-3\\\">\\n\\n        <h3>Add Photos</h3>\\n\\n        <div ng2FileDrop\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\n             [uploader]=\\\"uploader\\\"\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n            Drop photos here\\n        </div>\\n\\n        Multiple\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n        Single\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n        <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"50%\\\">Name</th>\\n                <th>Size</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n             </tr>\\n            </tbody>\\n        </table>\\n\\n        <div>\\n            <div>\\n                Queue progress:\\n                <div class=\\\"progress mb-4\\\" >\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                <span class=\\\"fa fa-upload\\\"></span> Upload all\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel \\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                <span class=\\\"fa fa-trash\\\"></span> Remove\\n            </button>\\n        </div>\\n\\n    </div>\\n\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-edit',\n  templateUrl: './photo-edit.component.html',\n  styleUrls: ['./photo-edit.component.css']\n})\nexport class PhotoEditComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService, private userService: UserService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: string) {\n    this.alertify.confirm('Sure??', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        const deletedPhotoId = this.photos.findIndex(p => p.id === id);\n        this.photos.splice(deletedPhotoId, 1);\n      }, error => {\n        this.alertify.error('failed!!');\n      });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  messages works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\n\\n        <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\"  >Matches</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\" >Lists</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\" >Messages</a>\\n            </li>\\n        </ul>\\n\\n        <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n            <span class=\\\"mr-1\\\">\\n                <img src=\\\"{{photoUrl}}\\\" alt=\\\"\\\">\\n            </span>\\n            <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n                Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n            </a>\\n\\n            <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\"><i class=\\\"fa fa-user\\\"></i> Edit Profile</a>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\" href=\\\"#\\\"><i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\n            </div>\\n        </div>\\n        <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required\\n                [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required\\n                [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\">\\n            <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n        </form>\\n    </div>\\n</nav>\"","module.exports = \".dropdown-toggle, .dropdown-item {\\n  cursor: pointer; }\\n\\nimg {\\n  max-height: 50px;\\n  display: inline;\\n  border: 2px white solid; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-nav',\n    templateUrl: 'nav.component.html',\n    styleUrls: ['nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n    model: any = {};\n    photoUrl: string;\n\n    constructor(private authService: AuthService, private alertify: AlertifyService,\n        private router: Router) { }\n\n    ngOnInit() {\n        this.authService.currentPhotoUrl.subscribe(pUrl => this.photoUrl = pUrl);\n    }\n\n    login() {\n        this.authService.login(this.model).subscribe(next => {\n            this.alertify.success('Logged in successfully');\n\n        }, error => {\n            this.alertify.error(error);\n        }, () => {\n            this.router.navigate(['/members']);\n        });\n    }\n\n    loggedIn() {\n        return this.authService.loggedIn();\n    }\n\n    logout() {\n        localStorage.removeItem('token');\n        this.alertify.message('Logged out');\n        this.router.navigate(['/home']);\n        localStorage.removeItem('user');\n        this.authService.decodedToken = null;\n        this.authService.currentUser = null;\n    }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control is-invalid\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please Choose..</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is\\n      required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker >\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of\\n      Birth is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is\\n      required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') \\n             && registerForm.get('password').touched\\\">\\n      pwd Required\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') \\n             && registerForm.get('password').touched\\\">\\n      &gt;= 4 chars\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') \\n             && registerForm.get('password').touched\\\">\\n      less than 8 chars\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': \\n        (registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched)\\n        || (registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch'))}\\\" class=\\\"form-control\\\"\\n      formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') \\n         && registerForm.get('password').touched\\\">\\n      pwd Required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success mr-2\\\" type=\\\"submit\\\" [disabled]='!registerForm.valid'>Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\\n<p>From Value: {{registerForm.value | json}}</p>\\n<p>From status: {{registerForm.status | json}}</p>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  model: any = {};\n  registerForm: FormGroup;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    // this.registerForm = new FormGroup({\n    //   username: new FormControl('', Validators.required),\n    //   password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n    //   confirmPassword: new FormControl('', Validators.required)\n    // }, this.passwordMatchValidator);\n    this.createRegisterForm();\n   }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group( {\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : { 'mismatch': true };\n  }\n\n  register() {\n    // this.authService.register(this.model).subscribe(() => {\n    //   this.alertify.success(\"Successful registration\");\n    // }, error => {\n    //   this.alertify.error(error);\n    // })\n    console.log(this.registerForm.value);\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MembersEditComponent } from './members/members-edit/members-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes-gaurd';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    {\r\n        path: '', // localhost:4200/..\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver } },\r\n            { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver } },\r\n            {\r\n                path: 'member/edit', component: MembersEditComponent, resolve: { user: MemberEditResolver },\r\n                canDeactivate: [PreventUnsavedChanges]\r\n            },\r\n            { path: 'messages', component: MessagesComponent },\r\n            { path: 'lists', component: ListsComponent }\r\n        ]\r\n    },\r\n    { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}